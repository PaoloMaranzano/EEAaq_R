* using log directory 'C:/Users/paulm/OneDrive/Documenti/GitHub/EEAaq_R/EEAaq.Rcheck'
* using R version 4.3.2 (2023-10-31 ucrt)
* using platform: x86_64-w64-mingw32 (64-bit)
* R was compiled by
    gcc.exe (GCC) 12.3.0
    GNU Fortran (GCC) 12.3.0
* running under: Windows 11 x64 (build 26100)
* using session charset: UTF-8
* using options '--no-manual --as-cran'
* checking for file 'EEAaq/DESCRIPTION' ... OK
* this is package 'EEAaq' version '1.0.1'
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking serialization versions ... OK
* checking whether package 'EEAaq' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... NOTE
unable to verify current time
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... NOTE
Non-standard file/directory found at top level:
  'EEAaq.Rproj'
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
importazioni '::' o ':::' non dichiarate da:
  'ggspatial' 'tidyselect'
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... NOTE
Rd file 'EEAaq_export.Rd':
  \examples lines wider than 100 characters:
     ### Download PM10 data for the province (NUTS-3) of Milano (Italy) from January 1st to January 31st, 2023

Rd file 'EEAaq_get_data.Rd':
  \examples lines wider than 100 characters:
     ### Download PM10 data for the province (NUTS-3) of Milano (Italy) from January 1st to January 31st, 2023

Rd file 'EEAaq_idw_map.Rd':
  \examples lines wider than 100 characters:
     ### Monthly aggregation: compute station-specific monthly minimum, average, and maximum NO2 concentrations
     ### Dynamic IDW interpolation map (interactive leafleat) of the average NO2 concentrations for the whole Lombardy

Rd file 'EEAaq_import.Rd':
  \examples lines wider than 100 characters:
     ### Download PM10 data for the province (NUTS-3) of Milano (Italy) from January 1st to January 31st, 2023

Rd file 'EEAaq_map_stations.Rd':
  \examples lines wider than 100 characters:
     ###     union of the available regions (NUTS-2), while municipalities (LAUs) are used as inner borders.
     ### Dynamic (interactive leaflet) map of available stations across the whole country. External borders are given by the

Rd file 'EEAaq_summary.Rd':
  \examples lines wider than 100 characters:
     ### Download PM10 data for the province (NUTS-3) of Milano (Italy) from January 1st to January 31st, 2023

Rd file 'EEAaq_time_aggregate.Rd':
  \examples lines wider than 100 characters:
     ### Monthly aggregation: compute station-specific monthly minimum, average, and maximum NO2 concentrations
     ### Weekly aggregation: compute station-specific monthly average and standard deviation concentrations

Rd file 'is_EEAaq_df.Rd':
  \examples lines wider than 100 characters:
     ### Download PM10 data for the province (NUTS-3) of Milano (Italy) from January 1st to January 31st, 2023

These lines will be truncated in the PDF manual.
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ... OK
* checking examples with --run-donttest ... [54s] ERROR
Running examples in 'EEAaq-Ex.R' failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: EEAaq_map_stations
> ### Title: Create a static or dynamic (interactive leaflet) map
> ###   representing the geographical locations of the stations based on a
> ###   user-defined input dataset of class 'EEAaq_df' or 'EEAaq_df_sfc'.
> ### Aliases: EEAaq_map_stations
> 
> ### ** Examples
> 
> ## No test: 
> `%>%` <- dplyr::`%>%`
> ### Retrieve all the stations measuring PM10 in Belgium
> IDstations <- IDstations %>%
+   dplyr::filter(ISO %in% c("BE"),
+                 AirPollutant %in% "PM10") %>%
+   dplyr::pull(AirQualityStationEoICode) %>%
+   unique()
Error: object 'IDstations' not found
Execution halted
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 1 ERROR, 4 NOTEs
