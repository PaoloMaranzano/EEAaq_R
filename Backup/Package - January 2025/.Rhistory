Breaks_HPJ <- bind_rows(B_HPJ)
Breaks_HPJ <- Breaks_HPJ %>%
mutate(Date = make_date(year = Breaks))
Data_long <- Data %>%
pivot_longer(cols = c(everything(),-Date), names_to = "TS", values_to = "Y")
Data_long <- left_join(x = Data_long, y = Yhat, by = c("Date","TS"))
Data_long_list[[j]] <- Data_long
##### Plot with breaks
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "yhat_nojump" ~ "HP no jumps",
Var == "yhat_BIC" ~ "HPJ (BIC)",
Var == "yhat_IS" ~ "IS",
Var == "Y" ~ "Emiss. observed")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
geom_vline(data = Breaks_HPJ, mapping = aes(xintercept = Date)) +
geom_vline(data = Breaks_IS, mapping = aes(xintercept = Date), col = "red") +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Smoothing of sectoral greenhouse gases (GHGs) emissions using HPJ and IS in ",Cnt_name[j]),
subtitle = "Change points identified (vertical lines): HPJ = black, IS = red") +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 1800, height = 1200, res = 200, filename = paste0("GHGs_Sector_",Cnt[j],".png"))
##### Plot without breaks
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "yhat_nojump" ~ "HP no jumps",
Var == "yhat_BIC" ~ "HPJ (BIC)",
Var == "yhat_IS" ~ "IS",
Var == "Y" ~ "Emiss. observed")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Smoothing of sectoral greenhouse gases (GHGs) emissions using HPJ and IS in ",Cnt_name[j])) +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 1800, height = 1200, res = 200, filename = paste0("GHGs_Sector_",Cnt[j],"_without.png"))
##### Plot difference w.r.t. HP
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
mutate(Diff_IS = yhat_IS - yhat_nojump,
Diff_HPJ = yhat_BIC - yhat_nojump) %>%
select(Date,TS,Diff_IS,Diff_HPJ) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "Diff_IS" ~ "IS",
Var == "Diff_HPJ" ~ "HPJ (BIC)")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
geom_vline(data = Breaks_HPJ, mapping = aes(xintercept = Date)) +
geom_vline(data = Breaks_IS, mapping = aes(xintercept = Date), col = "red") +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Difference between HP-filtered GHGs emissions and HPJ and IS filters in ",Cnt_name[j]),
subtitle = "Change points identified (vertical lines): HPJ = black, IS = red") +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 1800, height = 1200, res = 200, filename = paste0("Diff_HP_GHGs_Sector_",Cnt[j],".png"))
##### Plot difference w.r.t. HP
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
mutate(Diff_IS = yhat_IS - Y,
Diff_HPJ = yhat_BIC - Y) %>%
select(Date,TS,Diff_IS,Diff_HPJ) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "Diff_IS" ~ "IS",
Var == "Diff_HPJ" ~ "HPJ (BIC)")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
geom_vline(data = Breaks_HPJ, mapping = aes(xintercept = Date)) +
geom_vline(data = Breaks_IS, mapping = aes(xintercept = Date), col = "red") +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Difference between observed GHGs emissions and filtered values in ",Cnt_name[j]),
subtitle = "Change points identified (vertical lines): HPJ = black, IS = red") +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 2000, height = 1200, res = 200, filename = paste0("Diff_Y_GHGs_Sector_",Cnt[j],".png"))
}
#############################################################################
########## Comparison of HPJ and Autobox using GHGs emissions data ##########
#############################################################################
setwd("H:/.shortcut-targets-by-id/1mNGloWR2MTD2wUBWoYjZ-fq7zXyU9AJf/UCM with jumps/Compare with Jennifer/Data and applications/GHGs_emissions/")
library(tidyverse)
library(ggplot2)
library(readr)
library(stringr)
# HPJ
library(jumps)
# Autobox
library(gets)
##### Source: The Shift Data Portal (Climate)
# https://theshiftdataportal.org/climate/ghg?chart-type=stacked&chart-types=stacked&chart-types=stacked-percent&chart-types=pie&chart-types=line&chart-types=ranking&emissions-unit=MtCO2eq&group-names=Europe&is-range=true&source=PIK&sectors=Energy&sectors=Agriculture&sectors=Industry+and+Construction&sectors=Waste&sectors=Other+Sectors&dimension=bySector&end=2022&start=1750&multi=false
##### Setup
cols <- c("HP no jumps" = "orange",
"HPJ (BIC)" = "#339900",
"IS" = "#3399FF",
"Emiss. observed" = "black")
lwidth <- c("HP no jumps" = 1,
"HPJ (BIC)" = 1,
"IS" = 1,
"Emiss. observed" = 2)
Cnt <- c("UK","IT","Europe")
Cnt_name <- c("The United Kingdom","Italy","Europe")
# Sectors <- c("Energy","Agriculture","Industry & Construction","Waste","Other sectors")
# Cnt <- c("UK")
# Cnt_name <- c("The United Kingdom")
Sectors <- c("Energy","Agriculture","Industry & Construction")
Sectors_name <- c("Energy","Agriculture","Industry.and.Construction")
y_start <- 1900
Mod_IS <- Mod_HPJ <- Data_long_list <- vector(mode = "list", length = length(Cnt))
for (i in 1:length(Mod_IS)) {
Mod_IS[[i]] <- Mod_HPJ[[i]] <- vector(mode = "list", length = 5)
}
B_IS <- B_HPJ <- Mod_IS
j <- 1
##### Upload data
if (Cnt[j] == "UK") {
Data <- read.csv2("Greenhouse Gas by sector - United Kingdom, 1750-2022 (in MtCO2eq).csv")
}
if (Cnt[j] == "IT") {
Data <- read.csv2("Greenhouse Gas by sector - Italy, 1750-2022 (in MtCO2eq).csv")
}
if (Cnt[j] == "Europe") {
Data <- read.csv2("Greenhouse Gas by sector - Europe, 1750-2022 (in MtCO2eq).csv")
}
Data <- Data %>%
rename(Date = X) %>%
mutate(across(c(everything(),-c(Date)), function(x) str_replace(x,pattern=",",replacement=".")),
across(c(everything(),-c(Date)), function(x) as.numeric(x)),
Date = lubridate::make_date(year = lubridate::year(Date))) %>%
select(Date,all_of(Sectors_name))
Data_ts <- Data %>%
tsibble::as_tsibble(index = Date) %>%
tsbox::ts_ts()
Data_ts <- window(Data_ts,start = y_start)
Yhat <- vector(mode = "list", length = ncol(Data_ts))
for (v in 1:ncol(Data_ts)) {
##### Sector-specific subset
y <- Data_ts[,v]
y_name <- colnames(Data_ts)[v]
cat(paste0(Cnt_name[j]," -- Time series ",
v," of ",
ncol(Data_ts),": ",
y_name,"\n"))
y_clean <- tseries::na.remove(y)
n <- length(y_clean)
##### HP filter without jumps
hp_opt_nojump <- hpfj(y = y_clean, maxsum = 0, edf = TRUE,
parinit = c(sd_zeta = sd(y_clean, na.rm = TRUE)/10,
sd_eps = sd(y_clean, na.rm = TRUE),
sqrt_gamma = 0, rep(0, n-1), 0))
yhat_nojump <- ts(hp_opt_nojump$smoothed_level,
start = start(y_clean),
end = end(y_clean),
frequency = frequency(y_clean))
##### Automatic optimization using BIC criterion
hp_opt_BIC <- auto_hpfj(y = y_clean, grid = seq(0, sd(y_clean) * 10, sd(y_clean)/100),
ic = "bic", edf = TRUE)
yhat_BIC <- ts(hp_opt_BIC$smoothed_level,
start = start(y_clean),
end = end(y_clean),
frequency = frequency(y_clean))
Mod_HPJ[[j]][[v]] <- hp_opt_BIC
##### Indicator saturation and post-estimation integration
p <- 1
IS <- isat(y = y_clean, ar = p)
# yhat_IS <- ts(c(fitted(IS)),
#               start = start(y_clean),
#               end = end(y_clean),
#               frequency = frequency(y_clean))
yhat_IS <- ts(c(rep(NA,p),fitted(IS)),
start = start(y_clean),
end = end(y_clean),
frequency = frequency(y_clean))
Mod_IS[[j]][[v]] <- IS
##### Store smoothing as a data.frame
Yhat[[v]] <- data.frame(Date = lubridate::make_date(year = zoo::index(y_clean)),
TS = y_name,
yhat_nojump,
yhat_BIC,
yhat_IS)
B_IS[[j]][[v]] <- data.frame(Country = Cnt[j],
Sector = Sectors[v],
Breaks = if (is.null(Mod_IS[[j]][[v]]$ISnames)) "" else Mod_IS[[j]][[v]]$ISnames)
out_HPJ <- which(Mod_HPJ[[j]][[v]]$sigmas > 0)
if (!is_empty(out_HPJ)) {
B_HPJ[[j]][[v]] <- data.frame(Country = Cnt[j],
TS = Sectors[v],
Breaks = zoo::index(Data_ts)[out_HPJ])
} else {
B_HPJ[[j]][[v]] <- data.frame(Country = Cnt[j],TS = Sectors[v], Breaks = NA)
}
}
Yhat <- bind_rows(Yhat)
Breaks_IS <- bind_rows(B_IS)
Breaks_IS <- Breaks_IS %>%
mutate(Date = make_date(year = parse_number(Breaks)))
Breaks_HPJ <- bind_rows(B_HPJ)
Breaks_HPJ <- Breaks_HPJ %>%
mutate(Date = make_date(year = Breaks))
View(Breaks_HPJ)
#############################################################################
########## Comparison of HPJ and Autobox using GHGs emissions data ##########
#############################################################################
setwd("H:/.shortcut-targets-by-id/1mNGloWR2MTD2wUBWoYjZ-fq7zXyU9AJf/UCM with jumps/Compare with Jennifer/Data and applications/GHGs_emissions/")
library(tidyverse)
library(ggplot2)
library(readr)
library(stringr)
# HPJ
library(jumps)
# Autobox
library(gets)
##### Source: The Shift Data Portal (Climate)
# https://theshiftdataportal.org/climate/ghg?chart-type=stacked&chart-types=stacked&chart-types=stacked-percent&chart-types=pie&chart-types=line&chart-types=ranking&emissions-unit=MtCO2eq&group-names=Europe&is-range=true&source=PIK&sectors=Energy&sectors=Agriculture&sectors=Industry+and+Construction&sectors=Waste&sectors=Other+Sectors&dimension=bySector&end=2022&start=1750&multi=false
##### Setup
cols <- c("HP no jumps" = "orange",
"HPJ (BIC)" = "#339900",
"IS" = "#3399FF",
"Emiss. observed" = "black")
lwidth <- c("HP no jumps" = 1,
"HPJ (BIC)" = 1,
"IS" = 1,
"Emiss. observed" = 2)
Cnt <- c("UK","IT","Europe")
Cnt_name <- c("The United Kingdom","Italy","Europe")
# Sectors <- c("Energy","Agriculture","Industry & Construction","Waste","Other sectors")
# Cnt <- c("UK")
# Cnt_name <- c("The United Kingdom")
Sectors <- c("Energy","Agriculture","Industry & Construction")
Sectors_name <- c("Energy","Agriculture","Industry.and.Construction")
y_start <- 1900
Mod_IS <- Mod_HPJ <- Data_long_list <- Breaks_HPJ_list <- Breaks_IS_list <- vector(mode = "list", length = length(Cnt))
for (i in 1:length(Mod_IS)) {
Mod_IS[[i]] <- Mod_HPJ[[i]] <- vector(mode = "list", length = 5)
}
B_IS <- B_HPJ <- Mod_IS
for (j in 1:length(Cnt)) {
##### Upload data
if (Cnt[j] == "UK") {
Data <- read.csv2("Greenhouse Gas by sector - United Kingdom, 1750-2022 (in MtCO2eq).csv")
}
if (Cnt[j] == "IT") {
Data <- read.csv2("Greenhouse Gas by sector - Italy, 1750-2022 (in MtCO2eq).csv")
}
if (Cnt[j] == "Europe") {
Data <- read.csv2("Greenhouse Gas by sector - Europe, 1750-2022 (in MtCO2eq).csv")
}
Data <- Data %>%
rename(Date = X) %>%
mutate(across(c(everything(),-c(Date)), function(x) str_replace(x,pattern=",",replacement=".")),
across(c(everything(),-c(Date)), function(x) as.numeric(x)),
Date = lubridate::make_date(year = lubridate::year(Date))) %>%
select(Date,all_of(Sectors_name))
Data_ts <- Data %>%
tsibble::as_tsibble(index = Date) %>%
tsbox::ts_ts()
Data_ts <- window(Data_ts,start = y_start)
Yhat <- vector(mode = "list", length = ncol(Data_ts))
for (v in 1:ncol(Data_ts)) {
##### Sector-specific subset
y <- Data_ts[,v]
y_name <- colnames(Data_ts)[v]
cat(paste0(Cnt_name[j]," -- Time series ",
v," of ",
ncol(Data_ts),": ",
y_name,"\n"))
y_clean <- tseries::na.remove(y)
n <- length(y_clean)
##### HP filter without jumps
hp_opt_nojump <- hpfj(y = y_clean, maxsum = 0, edf = TRUE,
parinit = c(sd_zeta = sd(y_clean, na.rm = TRUE)/10,
sd_eps = sd(y_clean, na.rm = TRUE),
sqrt_gamma = 0, rep(0, n-1), 0))
yhat_nojump <- ts(hp_opt_nojump$smoothed_level,
start = start(y_clean),
end = end(y_clean),
frequency = frequency(y_clean))
##### Automatic optimization using BIC criterion
hp_opt_BIC <- auto_hpfj(y = y_clean, grid = seq(0, sd(y_clean) * 10, sd(y_clean)/100),
ic = "bic", edf = TRUE)
yhat_BIC <- ts(hp_opt_BIC$smoothed_level,
start = start(y_clean),
end = end(y_clean),
frequency = frequency(y_clean))
Mod_HPJ[[j]][[v]] <- hp_opt_BIC
##### Indicator saturation and post-estimation integration
p <- 1
IS <- isat(y = y_clean, ar = p)
# yhat_IS <- ts(c(fitted(IS)),
#               start = start(y_clean),
#               end = end(y_clean),
#               frequency = frequency(y_clean))
yhat_IS <- ts(c(rep(NA,p),fitted(IS)),
start = start(y_clean),
end = end(y_clean),
frequency = frequency(y_clean))
Mod_IS[[j]][[v]] <- IS
##### Store smoothing as a data.frame
Yhat[[v]] <- data.frame(Date = lubridate::make_date(year = zoo::index(y_clean)),
TS = y_name,
yhat_nojump,
yhat_BIC,
yhat_IS)
B_IS[[j]][[v]] <- data.frame(Country = Cnt[j],
Sector = Sectors[v],
Breaks = if (is.null(Mod_IS[[j]][[v]]$ISnames)) "" else Mod_IS[[j]][[v]]$ISnames)
out_HPJ <- which(Mod_HPJ[[j]][[v]]$sigmas > 0)
if (!is_empty(out_HPJ)) {
B_HPJ[[j]][[v]] <- data.frame(Country = Cnt[j],
TS = Sectors[v],
Breaks = zoo::index(Data_ts)[out_HPJ])
} else {
B_HPJ[[j]][[v]] <- data.frame(Country = Cnt[j],TS = Sectors[v], Breaks = NA)
}
}
Yhat <- bind_rows(Yhat)
Breaks_IS <- bind_rows(B_IS)
Breaks_IS <- Breaks_IS %>%
mutate(Date = make_date(year = parse_number(Breaks)))
Breaks_HPJ <- bind_rows(B_HPJ)
Breaks_HPJ <- Breaks_HPJ %>%
mutate(Date = make_date(year = Breaks))
Breaks_IS_list[[j]] <- Breaks_IS
Breaks_HPJ_list[[j]] <- Breaks_HPJ
Data_long <- Data %>%
pivot_longer(cols = c(everything(),-Date), names_to = "TS", values_to = "Y")
Data_long <- left_join(x = Data_long, y = Yhat, by = c("Date","TS"))
Data_long_list[[j]] <- Data_long
##### Plot with breaks
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "yhat_nojump" ~ "HP no jumps",
Var == "yhat_BIC" ~ "HPJ (BIC)",
Var == "yhat_IS" ~ "IS",
Var == "Y" ~ "Emiss. observed")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
geom_vline(data = Breaks_HPJ, mapping = aes(xintercept = Date)) +
geom_vline(data = Breaks_IS, mapping = aes(xintercept = Date), col = "red") +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Smoothing of sectoral greenhouse gases (GHGs) emissions using HPJ and IS in ",Cnt_name[j]),
subtitle = "Change points identified (vertical lines): HPJ = black, IS = red") +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 1800, height = 1200, res = 200, filename = paste0("GHGs_Sector_",Cnt[j],".png"))
##### Plot without breaks
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "yhat_nojump" ~ "HP no jumps",
Var == "yhat_BIC" ~ "HPJ (BIC)",
Var == "yhat_IS" ~ "IS",
Var == "Y" ~ "Emiss. observed")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Smoothing of sectoral greenhouse gases (GHGs) emissions using HPJ and IS in ",Cnt_name[j])) +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 1800, height = 1200, res = 200, filename = paste0("GHGs_Sector_",Cnt[j],"_without.png"))
##### Plot difference w.r.t. HP
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
mutate(Diff_IS = yhat_IS - yhat_nojump,
Diff_HPJ = yhat_BIC - yhat_nojump) %>%
select(Date,TS,Diff_IS,Diff_HPJ) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "Diff_IS" ~ "IS",
Var == "Diff_HPJ" ~ "HPJ (BIC)")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
geom_vline(data = Breaks_HPJ, mapping = aes(xintercept = Date)) +
geom_vline(data = Breaks_IS, mapping = aes(xintercept = Date), col = "red") +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Difference between HP-filtered GHGs emissions and HPJ and IS filters in ",Cnt_name[j]),
subtitle = "Change points identified (vertical lines): HPJ = black, IS = red") +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 1800, height = 1200, res = 200, filename = paste0("Diff_HP_GHGs_Sector_",Cnt[j],".png"))
##### Plot difference w.r.t. HP
p <- Data_long %>%
filter(Date >= make_date(year=y_start)) %>%
mutate(Diff_IS = yhat_IS - Y,
Diff_HPJ = yhat_BIC - Y) %>%
select(Date,TS,Diff_IS,Diff_HPJ) %>%
pivot_longer(cols = c(everything(),-c(Date,TS)), names_to = "Var", values_to = "Value") %>%
mutate(TS = case_when(TS == "Industry.and.Construction" ~ "Industry & Construction",
TS == "Other.Sectors" ~ "Other sectors",
TRUE ~ TS),
Var = case_when(Var == "Diff_IS" ~ "IS",
Var == "Diff_HPJ" ~ "HPJ (BIC)")) %>%
ggplot(mapping = aes(x = Date, y = Value, col = Var, linewidth = Var)) +
geom_line() +
geom_vline(data = Breaks_HPJ, mapping = aes(xintercept = Date)) +
geom_vline(data = Breaks_IS, mapping = aes(xintercept = Date), col = "red") +
theme_bw() +
theme(legend.position = "bottom") +
facet_wrap(~ TS, scales = "free", ncol = 2) +
labs(x = "",
y = "MtCO2eq",
title = paste0("Difference between observed GHGs emissions and filtered values in ",Cnt_name[j]),
subtitle = "Change points identified (vertical lines): HPJ = black, IS = red") +
scale_color_manual("",values = cols) +
scale_linewidth_manual("",values = lwidth)
ggpubr::ggexport(p,width = 2000, height = 1200, res = 200, filename = paste0("Diff_Y_GHGs_Sector_",Cnt[j],".png"))
}
library(openxlsx)
Breaks_HPJ_list[[1]]
Breaks_HPJ_list[[2]]
##### Creo file Excel
wb <- createWorkbook("HPJ_BreaksDates")
##### Save Excel sheet
addWorksheet(wb,"UK")
writeData(wb, sheet = "UK", Breaks_HPJ_list[[1]], colNames = T)
addWorksheet(wb,"Italy")
writeData(wb, sheet = "Italy", Breaks_HPJ_list[[2]], colNames = T)
addWorksheet(wb,"Europe")
writeData(wb, sheet = "Europe", Breaks_HPJ_list[[3]], colNames = T)
##### Salvatggio file Excel
saveWorkbook(wb,"HPJ_BreaksDates.xlsx",overwrite = T)
Breaks_HPJ_list[[1]]
Breaks_HPJ_list[[2]]
##### Creo file Excel
wb <- createWorkbook("HPJ_BreaksDates")
##### Save Excel sheet
addWorksheet(wb,"UK")
Breaks_HPJ_UK <- Breaks_HPJ_list[[1]]
writeData(wb, sheet = "UK", Breaks_HPJ_UK, colNames = T)
addWorksheet(wb,"Italy")
Breaks_HPJ_IT <- Breaks_HPJ_list[[2]]
writeData(wb, sheet = "Italy", Breaks_HPJ_IT, colNames = T)
addWorksheet(wb,"Europe")
Breaks_HPJ_EU <- Breaks_HPJ_list[[3]]
writeData(wb, sheet = "Europe", Breaks_HPJ_EU, colNames = T)
##### Salvatggio file Excel
saveWorkbook(wb,"HPJ_BreaksDates.xlsx",overwrite = T)
Breaks_HPJ_list[[3]]
Breaks_HPJ_EU
##### Creo file Excel
wb <- createWorkbook("HPJ_BreaksDates")
##### Save Excel sheet
addWorksheet(wb,"HP - Identified breaks")
writeData(wb, sheet = "HP - Identified breaks", Breaks_HPJ_list[[3]], colNames = T)
##### Salvatggio file Excel
saveWorkbook(wb,"HPJ_BreaksDates.xlsx",overwrite = T)
1.21+0.80+0+2+2.50+1+0
12-7.51
10.29-4.49
10/31
load("H:/Il mio Drive/UniMiB/Tesisti/Tesi Camilla Lionetti/enviroment/ITALIA.RData")
View(datiIPM25)
View(staz_compl)
load("H:/.shortcut-targets-by-id/1BNb3hsFKyndDWlPDs4JTjbrSnI4UljMj/RG-Space_time-Condivisione/RG_ST_pointdataset.RData")
View(Agrimonia_month_full)
load("H:/.shortcut-targets-by-id/1BNb3hsFKyndDWlPDs4JTjbrSnI4UljMj/RG-Space_time-Condivisione/Raw data/Agrimonia_Dataset_v_3_0_0.Rdata")
View(AgrImOnIA_Dataset_v_3_0_0)
#library(EEAaqq)
if (requireNamespace("devtools", quietly = TRUE)) devtools::load_all(".")
#library(EEAaqq)
library(EEAaq)
